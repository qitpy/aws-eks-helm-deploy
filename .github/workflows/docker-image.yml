name: Deploy Docker image to Dockerhub

on:
  push:
    branches: ['*']

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

jobs:
  validate-code:
    name: Shellcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          check_together: true

  validate-branch:
    needs: validate-code
    runs-on: ubuntu-latest
    outputs:
      is_deployable: ${{ steps.validate.outputs.IS_DEPLOYABLE }}
      version: ${{ steps.validate.outputs.VERSION_NUMBER }}
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Check if deploy branch
      id: validate
      run: |
        branch_name=$(git branch --show-current)
        echo "Branch name: $branch_name"
        if [[ "$branch_name" =~ ^v[0-9]+\.[0-9]+$ ]]; then
          echo "Branch name matches with version release."
          echo "VERSION_NUMBER=${branch_name#v}" >> $GITHUB_OUTPUT
          echo "IS_DEPLOYABLE=true" >> $GITHUB_OUTPUT
        elif [[ "$branch_name" == "master" ]]; then
          echo "Branch name is 'master'. Setting VERSION_NUMBER as 'latest'..."
          export VERSION_NUMBER=latest
          echo "VERSION_NUMBER=$VERSION_NUMBER" >> $GITHUB_OUTPUT
          echo "IS_DEPLOYABLE=true" >> $GITHUB_OUTPUT
        else
          echo "Branch name does not match pattern. Stopping the workflow..."
          echo "IS_DEPLOYABLE=false" >> $GITHUB_OUTPUT
        fi
        echo "IS_DEPLOYABLE=$IS_DEPLOYABLE" >> $GITHUB_OUTPUT

  deploy:
    needs: validate-branch
    runs-on: ubuntu-latest
    if: needs.validate-branch.outputs.is_deployable == 'true'
    env:
      VERSION_NUMBER : ${{needs.validate-branch.outputs.version}}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Login to Dockerhub
      uses: docker/login-action@v1
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_PASSWORD }}

    - name: Build Docker image
      run: docker build -t aws-eks-helm-deploy:${VERSION_NUMBER} .

    - name: Tag Docker image
      run: docker tag aws-eks-helm-deploy:${VERSION_NUMBER} qitpy/aws-eks-helm-deploy:${VERSION_NUMBER}

    - name: Push Docker image
      run: docker push qitpy/aws-eks-helm-deploy:${VERSION_NUMBER}
